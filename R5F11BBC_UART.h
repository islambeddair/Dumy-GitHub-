/**********************************************************************/
/*                                                                    */
/*  FILE        : R5F11BBC_UART.h                   			  	 */
/*  DATE        : Wed, Dec 22, 2021                                     */
/*  Last Update : Wed, Dec 22, 2021                            		   */
/*  DESCRIPTION : UART Interface  Header                     		 */
/*  CPU GROUP   : R5F11BBC                                            */
/*  Author      : Osama ElMorady						          	  */
/*                          						                  */
/***********************************************************************/

#ifndef _R5F11BBC_UART_H_
#define _R5F11BBC_UART_H_

/***********************************************************************************************************************
*                                            Module's Inclusion files                                                  *
***********************************************************************************************************************/







/***********************************************/
typedef enum
{
	UART0 ,
	UART1 ,
	UART2 ,

	UART_No ,

} UART_Channel ;
/***********************************************/
typedef enum
{
	UART_Baud_4800 ,
	UART_Baud_9600 ,
	UART_Baud_19200 ,
	UART_Baud_38400 ,
	UART_Baud_115200 ,

	UART_N_BaudRates

} UART_BDRT ;
/***********************************************/
typedef enum
{
	UART_Parity_Non ,
	UART_Parity_Zero ,
	UART_Parity_Even ,
	UART_Parity_Odd ,

} UART_Parity_Status ;
/***********************************************/
typedef enum
{
	UART_MSB ,
	UART_LSB ,

} UART_DATA_Order ;
/***********************************************/
typedef enum
{
	UART_Sync ,		/* Polling */
	UART_ASync ,	/* Interrupt */

} UART_TR_Type ;
/***********************************************/








typedef struct UART_Config
{
	UART_Channel Channel_No  ;
	UART_BDRT	BaudRate ;  				 /* Most Common 9600 , 115200 */
	UART_Parity_Status Parity_status ;
	UART_DATA_Order Data_order_status ;		/* MSB-LSB */
	UART_TR_Type	TR_type ;

} UART_Config_t ;




/***********************************************************************************************************************/
void Uart_vInit( UART_Config_t * ch_config) ;
/***********************************************************************************************************************/





/***********************************************************************************************************************/
void Uart_vDeInit( UART_Channel  channel_no) ;
/***********************************************************************************************************************/




/***********************************************************************************************************************/
void Uart_vStartBit( UART_Channel  channel_no ) ;
/***********************************************************************************************************************/





/***********************************************************************************************************************/
void Uart_vStopBit( UART_Channel  channel_no ) ;
/***********************************************************************************************************************/




/* Using Polling */
/***********************************************************************************************************************/
void Uart_vSendData( UART_Channel  channel_no , uint8_t DataSend , uint8_t DataLength ) ;
/***********************************************************************************************************************/




/* Using Polling */
/***********************************************************************************************************************/
void Uart_vReceiveData( UART_Channel  channel_no , uint8_t * DataReceived , uint8_t DataLength ) ;
/***********************************************************************************************************************/




/* Using Interrupt */
/***********************************************************************************************************************/
void Uart_vSendEnd( UART_Channel  channel_no , void (* UART_SetCallBack_Send )(void) ) ;
/***********************************************************************************************************************/




/* Using Interrupt */
/***********************************************************************************************************************/
void Uart_vReceiveEnd( UART_Channel  channel_no, void (* UART_SetCallBack_Receive )(void) ) ;
/***********************************************************************************************************************/








#endif /* _R5F11BBC_UART_H_ */
